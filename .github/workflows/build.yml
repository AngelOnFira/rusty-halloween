name: Build ESP32 Firmware

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust for Xtensa
      uses: esp-rs/xtensa-toolchain@v1.5
      with:
        default: true
        buildtargets: esp32s2
        ldproxy: true

    - name: Install ESP-IDF dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git wget flex bison gperf python3 \
          python3-pip python3-venv cmake ninja-build ccache libffi-dev \
          libssl-dev dfu-util libusb-1.0-0

    - name: Install ESP-IDF
      run: |
        mkdir -p ~/esp
        cd ~/esp
        git clone -b v5.3.2 --recursive https://github.com/espressif/esp-idf.git
        cd esp-idf
        ./install.sh esp32s2

    - name: Create .env file
      working-directory: ./esp32-firmware
      run: |
        echo "ROUTER_SSID=\"${{ secrets.ROUTER_SSID }}\"" > .env
        echo "ROUTER_PASSWORD=\"${{ secrets.ROUTER_PASSWORD }}\"" >> .env

    - name: Build firmware
      working-directory: ./esp32-firmware
      run: |
        . ~/esp/esp-idf/export.sh
        cargo build --release

    - name: Create firmware binary
      working-directory: ./esp32-firmware
      run: |
        espflash save-image \
          --chip esp32s2 \
          --merge \
          --partition-table partitions.csv \
          --skip-padding \
          target/xtensa-esp32s2-espidf/release/esp32-mesh-firmware \
          esp32-mesh-firmware.bin

    - name: Upload firmware artifact
      uses: actions/upload-artifact@v4
      with:
        name: esp32-mesh-firmware
        path: esp32-firmware/esp32-mesh-firmware.bin
        retention-days: 30
